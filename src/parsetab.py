
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightPOWERASSIGN COMMA DIVIDE ELSE EQ FLOAT GE GT ID IF INT LBRACE LE LPAREN LT MINUS NE NUM PLUS POWER RBRACE REAL RPAREN SEMI TIMES VAR WHILEprogram : VAR decl_list stmt_list\n               | stmt_listdecl_list : decl_list decl\n                 | decldecl : type id_list SEMItype : REAL\n            | INTid_list : id_list COMMA ID\n               | IDstmt_list : stmt_list stmt\n                 | stmtstmt : assign_stmt\n            | while_stmt\n            | if_stmtassign_stmt : ID ASSIGN expr SEMIwhile_stmt : WHILE LPAREN relexpr RPAREN LBRACE stmt_list RBRACEif_stmt : IF LPAREN relexpr RPAREN LBRACE stmt_list RBRACE else_partelse_part : ELSE LBRACE stmt_list RBRACE\n                 | emptyrelexpr : expr EQ expr\n               | expr NE expr\n               | expr LT expr\n               | expr LE expr\n               | expr GT expr\n               | expr GE exprexpr : expr PLUS term\n            | expr MINUS term\n            | termterm : term TIMES factor\n            | term DIVIDE factor\n            | term POWER factor\n            | factorfactor : LPAREN expr RPAREN\n              | ID\n              | NUM\n              | FLOATempty :'
    
_lr_action_items = {'VAR':([0,],[2,]),'ID':([0,3,4,5,6,7,11,12,13,14,15,16,17,18,19,20,21,28,34,35,36,37,38,39,40,41,44,45,46,47,48,49,58,65,66,67,68,69,70,72,73,74,75,],[8,8,-11,-12,-13,-14,8,-4,23,-6,-7,-10,24,24,24,8,-3,24,-5,51,-15,24,24,24,24,24,24,24,24,24,24,24,8,8,8,8,-16,-37,-17,-19,8,8,-18,]),'WHILE':([0,3,4,5,6,7,11,12,16,20,21,34,36,58,65,66,67,68,69,70,72,73,74,75,],[9,9,-11,-12,-13,-14,9,-4,-10,9,-3,-5,-15,9,9,9,9,-16,-37,-17,-19,9,9,-18,]),'IF':([0,3,4,5,6,7,11,12,16,20,21,34,36,58,65,66,67,68,69,70,72,73,74,75,],[10,10,-11,-12,-13,-14,10,-4,-10,10,-3,-5,-15,10,10,10,10,-16,-37,-17,-19,10,10,-18,]),'$end':([1,3,4,5,6,7,16,20,36,68,69,70,72,75,],[0,-2,-11,-12,-13,-14,-10,-1,-15,-16,-37,-17,-19,-18,]),'REAL':([2,11,12,21,34,],[14,14,-4,-3,-5,]),'INT':([2,11,12,21,34,],[15,15,-4,-3,-5,]),'RBRACE':([4,5,6,7,16,36,66,67,68,69,70,72,74,75,],[-11,-12,-13,-14,-10,-15,68,69,-16,-37,-17,-19,75,-18,]),'ASSIGN':([8,],[17,]),'LPAREN':([9,10,17,18,19,28,37,38,39,40,41,44,45,46,47,48,49,],[18,19,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NUM':([17,18,19,28,37,38,39,40,41,44,45,46,47,48,49,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'FLOAT':([17,18,19,28,37,38,39,40,41,44,45,46,47,48,49,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'SEMI':([22,23,24,25,26,27,29,30,51,52,53,54,55,56,57,],[34,-9,-34,36,-28,-32,-35,-36,-8,-26,-27,-29,-30,-31,-33,]),'COMMA':([22,23,51,],[35,-9,-8,]),'TIMES':([24,26,27,29,30,52,53,54,55,56,57,],[-34,39,-32,-35,-36,39,39,-29,-30,-31,-33,]),'DIVIDE':([24,26,27,29,30,52,53,54,55,56,57,],[-34,40,-32,-35,-36,40,40,-29,-30,-31,-33,]),'POWER':([24,26,27,29,30,52,53,54,55,56,57,],[-34,41,-32,-35,-36,41,41,-29,-30,-31,-33,]),'PLUS':([24,25,26,27,29,30,32,42,52,53,54,55,56,57,59,60,61,62,63,64,],[-34,37,-28,-32,-35,-36,37,37,-26,-27,-29,-30,-31,-33,37,37,37,37,37,37,]),'MINUS':([24,25,26,27,29,30,32,42,52,53,54,55,56,57,59,60,61,62,63,64,],[-34,38,-28,-32,-35,-36,38,38,-26,-27,-29,-30,-31,-33,38,38,38,38,38,38,]),'EQ':([24,26,27,29,30,32,52,53,54,55,56,57,],[-34,-28,-32,-35,-36,44,-26,-27,-29,-30,-31,-33,]),'NE':([24,26,27,29,30,32,52,53,54,55,56,57,],[-34,-28,-32,-35,-36,45,-26,-27,-29,-30,-31,-33,]),'LT':([24,26,27,29,30,32,52,53,54,55,56,57,],[-34,-28,-32,-35,-36,46,-26,-27,-29,-30,-31,-33,]),'LE':([24,26,27,29,30,32,52,53,54,55,56,57,],[-34,-28,-32,-35,-36,47,-26,-27,-29,-30,-31,-33,]),'GT':([24,26,27,29,30,32,52,53,54,55,56,57,],[-34,-28,-32,-35,-36,48,-26,-27,-29,-30,-31,-33,]),'GE':([24,26,27,29,30,32,52,53,54,55,56,57,],[-34,-28,-32,-35,-36,49,-26,-27,-29,-30,-31,-33,]),'RPAREN':([24,26,27,29,30,31,33,42,52,53,54,55,56,57,59,60,61,62,63,64,],[-34,-28,-32,-35,-36,43,50,57,-26,-27,-29,-30,-31,-33,-20,-21,-22,-23,-24,-25,]),'LBRACE':([43,50,71,],[58,65,73,]),'ELSE':([69,],[71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,11,58,65,73,],[3,20,66,67,74,]),'stmt':([0,3,11,20,58,65,66,67,73,74,],[4,16,4,16,4,4,16,16,4,16,]),'assign_stmt':([0,3,11,20,58,65,66,67,73,74,],[5,5,5,5,5,5,5,5,5,5,]),'while_stmt':([0,3,11,20,58,65,66,67,73,74,],[6,6,6,6,6,6,6,6,6,6,]),'if_stmt':([0,3,11,20,58,65,66,67,73,74,],[7,7,7,7,7,7,7,7,7,7,]),'decl_list':([2,],[11,]),'decl':([2,11,],[12,21,]),'type':([2,11,],[13,13,]),'id_list':([13,],[22,]),'expr':([17,18,19,28,44,45,46,47,48,49,],[25,32,32,42,59,60,61,62,63,64,]),'term':([17,18,19,28,37,38,44,45,46,47,48,49,],[26,26,26,26,52,53,26,26,26,26,26,26,]),'factor':([17,18,19,28,37,38,39,40,41,44,45,46,47,48,49,],[27,27,27,27,27,27,54,55,56,27,27,27,27,27,27,]),'relexpr':([18,19,],[31,33,]),'else_part':([69,],[70,]),'empty':([69,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> VAR decl_list stmt_list','program',3,'p_program','meuparser.py',12),
  ('program -> stmt_list','program',1,'p_program','meuparser.py',13),
  ('decl_list -> decl_list decl','decl_list',2,'p_decl_list','meuparser.py',20),
  ('decl_list -> decl','decl_list',1,'p_decl_list','meuparser.py',21),
  ('decl -> type id_list SEMI','decl',3,'p_decl','meuparser.py',28),
  ('type -> REAL','type',1,'p_type','meuparser.py',32),
  ('type -> INT','type',1,'p_type','meuparser.py',33),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','meuparser.py',37),
  ('id_list -> ID','id_list',1,'p_id_list','meuparser.py',38),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','meuparser.py',45),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','meuparser.py',46),
  ('stmt -> assign_stmt','stmt',1,'p_stmt','meuparser.py',53),
  ('stmt -> while_stmt','stmt',1,'p_stmt','meuparser.py',54),
  ('stmt -> if_stmt','stmt',1,'p_stmt','meuparser.py',55),
  ('assign_stmt -> ID ASSIGN expr SEMI','assign_stmt',4,'p_assign_stmt','meuparser.py',59),
  ('while_stmt -> WHILE LPAREN relexpr RPAREN LBRACE stmt_list RBRACE','while_stmt',7,'p_while_stmt','meuparser.py',63),
  ('if_stmt -> IF LPAREN relexpr RPAREN LBRACE stmt_list RBRACE else_part','if_stmt',8,'p_if_stmt','meuparser.py',67),
  ('else_part -> ELSE LBRACE stmt_list RBRACE','else_part',4,'p_else_part','meuparser.py',71),
  ('else_part -> empty','else_part',1,'p_else_part','meuparser.py',72),
  ('relexpr -> expr EQ expr','relexpr',3,'p_relexpr','meuparser.py',79),
  ('relexpr -> expr NE expr','relexpr',3,'p_relexpr','meuparser.py',80),
  ('relexpr -> expr LT expr','relexpr',3,'p_relexpr','meuparser.py',81),
  ('relexpr -> expr LE expr','relexpr',3,'p_relexpr','meuparser.py',82),
  ('relexpr -> expr GT expr','relexpr',3,'p_relexpr','meuparser.py',83),
  ('relexpr -> expr GE expr','relexpr',3,'p_relexpr','meuparser.py',84),
  ('expr -> expr PLUS term','expr',3,'p_expr','meuparser.py',88),
  ('expr -> expr MINUS term','expr',3,'p_expr','meuparser.py',89),
  ('expr -> term','expr',1,'p_expr','meuparser.py',90),
  ('term -> term TIMES factor','term',3,'p_term','meuparser.py',97),
  ('term -> term DIVIDE factor','term',3,'p_term','meuparser.py',98),
  ('term -> term POWER factor','term',3,'p_term','meuparser.py',99),
  ('term -> factor','term',1,'p_term','meuparser.py',100),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','meuparser.py',107),
  ('factor -> ID','factor',1,'p_factor','meuparser.py',108),
  ('factor -> NUM','factor',1,'p_factor','meuparser.py',109),
  ('factor -> FLOAT','factor',1,'p_factor','meuparser.py',110),
  ('empty -> <empty>','empty',0,'p_empty','meuparser.py',117),
]
